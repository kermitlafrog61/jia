# Generated by Django 4.0.6 on 2024-04-16 17:27

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActionPlane',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='action_plane', verbose_name='Изображение')),
                ('image_ru', models.ImageField(null=True, upload_to='action_plane', verbose_name='Изображение')),
                ('image_en', models.ImageField(null=True, upload_to='action_plane', verbose_name='Изображение')),
                ('image_ky', models.ImageField(null=True, upload_to='action_plane', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'План мероприятий',
                'verbose_name_plural': 'План мероприятий',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Advertising',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='advertising', verbose_name='Изображение')),
                ('link', models.URLField(verbose_name='Ссылка на официальный рекламу')),
            ],
            options={
                'verbose_name': 'Реклама',
                'verbose_name_plural': 'Рекламы',
            },
        ),
        migrations.CreateModel(
            name='BusinessSupport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('title_ky', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('created', models.DateField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('link', models.URLField(null=True, verbose_name='Ссылка на официальный источник')),
                ('banner', models.ImageField(null=True, upload_to='business_support', verbose_name='Баннер')),
            ],
            options={
                'verbose_name': 'Поддержка бизнеса',
                'verbose_name_plural': 'Поддержка бизнеса',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('title_ky', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('logo', models.ImageField(upload_to='contact', verbose_name='Логотип')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Контакт',
                'verbose_name_plural': 'Контакты',
            },
        ),
        migrations.CreateModel(
            name='FooterInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Address')),
                ('name_ru', models.CharField(max_length=255, null=True, verbose_name='Address')),
                ('name_en', models.CharField(max_length=255, null=True, verbose_name='Address')),
                ('name_ky', models.CharField(max_length=255, null=True, verbose_name='Address')),
            ],
            options={
                'verbose_name': 'Footer Info',
                'verbose_name_plural': 'Footer Info',
            },
        ),
        migrations.CreateModel(
            name='MainPageBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('title_ky', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('description_ru', models.TextField(null=True, verbose_name='Описание')),
                ('description_en', models.TextField(null=True, verbose_name='Описание')),
                ('description_ky', models.TextField(null=True, verbose_name='Описание')),
                ('banner', models.ImageField(null=True, upload_to='business_support', verbose_name='Баннер')),
                ('link', models.URLField(null=True, verbose_name='Ссылка на официальный сайт')),
            ],
            options={
                'verbose_name': 'Main Page',
                'verbose_name_plural': 'Main Page',
            },
        ),
        migrations.CreateModel(
            name='MemberShip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C')], default='A', max_length=1, verbose_name='Категория')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='Цена за резиденство')),
                ('district_price', models.PositiveIntegerField(default=0, verbose_name='Цена за резиденствие в регионах')),
                ('logo', models.ImageField(upload_to='logo', verbose_name='Логотип')),
                ('pdf_file', models.FileField(upload_to='pdf', verbose_name='PDF')),
            ],
            options={
                'verbose_name': 'Cтать резидентом',
                'verbose_name_plural': 'Cтать резидентом',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('CLUB', 'Клуб'), ('COMMITTEE', 'Комитет')], max_length=10, verbose_name='Категория')),
                ('title', models.CharField(max_length=255, verbose_name='Имя организации')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Имя организации')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Имя организации')),
                ('title_ky', models.CharField(max_length=255, null=True, verbose_name='Имя организации')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Информация об организации')),
                ('description_ru', ckeditor.fields.RichTextField(null=True, verbose_name='Информация об организации')),
                ('description_en', ckeditor.fields.RichTextField(null=True, verbose_name='Информация об организации')),
                ('description_ky', ckeditor.fields.RichTextField(null=True, verbose_name='Информация об организации')),
                ('image', models.ImageField(upload_to='organization/', verbose_name='Картинка организации')),
                ('icon', models.CharField(max_length=127, verbose_name='Иконка (https://remixicon.com)')),
            ],
            options={
                'verbose_name': 'Организация',
                'verbose_name_plural': 'Организации',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('name_ru', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('name_en', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('name_ky', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('file', models.FileField(null=True, upload_to='reports', verbose_name='Файл')),
                ('file_ru', models.FileField(null=True, upload_to='reports', verbose_name='Файл')),
                ('file_en', models.FileField(null=True, upload_to='reports', verbose_name='Файл')),
                ('file_ky', models.FileField(null=True, upload_to='reports', verbose_name='Файл')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата')),
            ],
            options={
                'verbose_name': 'Отчет',
                'verbose_name_plural': 'Отчеты',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='Situation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('title_ky', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('file', models.FileField(upload_to='documents', verbose_name='Документ')),
                ('file_ru', models.FileField(null=True, upload_to='documents', verbose_name='Документ')),
                ('file_en', models.FileField(null=True, upload_to='documents', verbose_name='Документ')),
                ('file_ky', models.FileField(null=True, upload_to='documents', verbose_name='Документ')),
                ('image', models.ImageField(upload_to='document_images', verbose_name='Изображение')),
                ('image_ru', models.ImageField(null=True, upload_to='document_images', verbose_name='Изображение')),
                ('image_en', models.ImageField(null=True, upload_to='document_images', verbose_name='Изображение')),
                ('image_ky', models.ImageField(null=True, upload_to='document_images', verbose_name='Изображение')),
                ('description', models.CharField(max_length=255, verbose_name='Комментарий')),
                ('description_ru', models.CharField(max_length=255, null=True, verbose_name='Комментарий')),
                ('description_en', models.CharField(max_length=255, null=True, verbose_name='Комментарий')),
                ('description_ky', models.CharField(max_length=255, null=True, verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Положение',
                'verbose_name_plural': 'Положения',
            },
        ),
        migrations.CreateModel(
            name='MemberShipPrivileges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('title_ky', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='priveleges', to='content.membership')),
            ],
            options={
                'verbose_name': 'Привилегии для резидента',
                'verbose_name_plural': 'Привилегии для резидента',
            },
        ),
        migrations.CreateModel(
            name='FooterPhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=255, verbose_name='Номер')),
                ('footer_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phones', to='content.footerinfo')),
            ],
            options={
                'verbose_name': 'Footer Info',
                'verbose_name_plural': 'Footer Info',
            },
        ),
        migrations.CreateModel(
            name='FooterEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('footer_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emails', to='content.footerinfo')),
            ],
            options={
                'verbose_name': 'Footer Info',
                'verbose_name_plural': 'Footer Info',
            },
        ),
        migrations.CreateModel(
            name='ContactPhone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=255, verbose_name='Телефон')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_phone', to='content.contact')),
            ],
        ),
        migrations.CreateModel(
            name='ContactEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=255, verbose_name='Email')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_email', to='content.contact')),
            ],
        ),
        migrations.CreateModel(
            name='ContactCellular',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=255, verbose_name='Сотовые')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_cellular', to='content.contact')),
            ],
        ),
    ]
